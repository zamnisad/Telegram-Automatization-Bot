import json
import os
import asyncio

"""
Example:
{'token': 'botToken', –î–û–ë–ê–í–ò–¢–¨ –í ENV
'AI link': 'http://localhost:11434',
'channels': [
        {
            'url': '@link',                                     |
            'rss_sources': ['s1', 's2', 's3'],                  |
            'hashtags': ['ht1', 'ht2', 'ht3'],                  |
            'time': ['08:30', '15:10', '19:50', '23:45'],       | user data example (dict)
            'template': 'temp',                                 |
            'rephrase': 'temp',                                 |
            'interval': '1000'                                  |
        },
        ...
    ]
}
"""

# BASE_TEMPLATE ="""–°–≥–µ–Ω–µ—Ä–∏—Ä—É–π –ø—Ä–∏–≤–ª–µ–∫–∞—Ç–µ–ª—å–Ω—ã–π —à–∞–±–ª–æ–Ω –¥–ª—è –Ω–æ–≤–æ—Å—Ç–Ω–æ–≥–æ –ø–æ—Å—Ç–∞ Telegram.
#             –®–∞–±–ª–æ–Ω –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å –Ω–µ –¥–ª–∏–Ω–Ω–µ–µ 5 —Å–ª–æ–≤, —Å–æ–¥–µ—Ä–∂–∞—Ç—å –æ–¥–Ω–æ —ç–º–æ–¥–∑–∏ –≤–Ω–∞—á–∞–ª–µ –∏ –Ω–µ –Ω–∞—á–∏–Ω–∞—Ç—å—Å—è —Å –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏–π.
#             –û—Ç–≤–µ—Ç –¥–æ–ª–∂–µ–Ω —Å–æ—Å—Ç–æ—è—Ç—å —Ç–æ–ª—å–∫–æ –∏–∑ —à–∞–±–ª–æ–Ω–∞. –û–±—è–∑–∞—Ç–µ–ª—å–Ω–æ –Ω–∞ —Ä—É—Å—Å–∫–æ–º —è–∑—ã–∫–µ.
#             –ù–∏ –≤ –∫–æ–µ–º —Å–ª—É—á–∞–µ –Ω–µ –∏—Å–ø–æ–ª—å–∑—É–π —à—Ç—É–∫–∏ –ø–æ —Ç–∏–ø—É ... üëâ https://[link] –∏ —Ç–¥. –í–æ—Ç —Ç–µ–∫—Å—Ç: \n\n\\text"""
# BASE_PHRASE = """–ü—Ä–æ—á—Ç–∏ —Å–ª–µ–¥—É—é—â–∏–π —Ç–µ–∫—Å—Ç –∏ —Å–æ—Å—Ç–∞–≤—å –∫—Ä–∞—Ç–∫–∏–π, —Å—Ç—Ä—É–∫—Ç—É—Ä–∏—Ä–æ–≤–∞–Ω–Ω—ã–π –ø–µ—Ä–µ—Å–∫–∞–∑. –ù–µ –Ω—É–∂–Ω–æ —Å–æ—Å—Ç–∞–≤–ª—è—Ç—å –æ–≥–ª–∞–≤–ª–µ–Ω–∏–µ –∏
#             –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –≤—Å—è–∫–∏–µ –≤–µ—â–∏ –ø–æ —Ç–∏–ø—É '–û—Å–Ω–æ–≤–Ω—ã–µ –ò–¥–µ–∏' '–°—É—Ç—å –ø–æ—Å—Ç–∞' –∏ —Ç–¥.
#             –ü—Ä–æ—Å—Ç–æ –ø–µ—Ä–µ—Ñ—Ä–∞–∑–∏—Ä—É–π —Ç–µ–∫—Å—Ç –Ω–∞ –Ω–∞—É—á–Ω–æ-–ø–æ–ø—É–ª—è—Ä–Ω—ã–π –±–µ–∑ –ª–∏—à–Ω–∏—Ö –≤–≤–æ–¥–Ω—ã—Ö —Ñ—Ä–∞–∑. –û–±—è–∑–∞—Ç–µ–ª—å–Ω–æ –Ω–∞ —Ä—É—Å—Å–∫–æ–º —è–∑—ã–∫–µ.
#             –ï—Å–ª–∏ —Ç–µ–∫—Å—Ç –∏–º–µ–µ—Ç —É–∫–∞–∑–∞–Ω–∏—è –Ω–∞ –∫–∞–∫–æ–≥–æ —Ç–æ —á–µ–ª–æ–≤–µ–∫–∞, –¥–æ–ø—É—Å—Ç–∏–º '–º–µ–Ω—è –∑–æ–≤—É—Ç ...', —Ç–æ —É—á—Ç–∏ —ç—Ç–æ –≤ —Å–≤–æ–µ–π —Ñ–æ—Ä–º—É–ª–∏—Ä–æ–≤–∫–µ
#             –û—Ç–≤–µ—Ç –Ω–µ –¥–æ–ª–∂–µ–Ω –ø—Ä–µ–≤—ã—à–∞—Ç—å \\len —Å–∏–º–≤–æ–ª–æ–≤. –í–æ—Ç —Ç–µ–∫—Å—Ç: \n\\text"""
# BASE_INTERVAL = 3600 * 3
# –≤ info.txt: link;rss1,rss2,..,rssN;ht1,ht2,..,htN;time1,time2,..,timeN;template;rephrase;interval;


class SetChannels:
    def __init__(self, filename=None):
        self.filename = filename
        self.BASE_TEMPLATE ="""–°–≥–µ–Ω–µ—Ä–∏—Ä—É–π –ø—Ä–∏–≤–ª–µ–∫–∞—Ç–µ–ª—å–Ω—ã–π —à–∞–±–ª–æ–Ω –¥–ª—è –Ω–æ–≤–æ—Å—Ç–Ω–æ–≥–æ –ø–æ—Å—Ç–∞ Telegram. 
            –®–∞–±–ª–æ–Ω –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å –Ω–µ –¥–ª–∏–Ω–Ω–µ–µ 5 —Å–ª–æ–≤, —Å–æ–¥–µ—Ä–∂–∞—Ç—å –æ–¥–Ω–æ —ç–º–æ–¥–∑–∏ –≤–Ω–∞—á–∞–ª–µ –∏ –Ω–µ –Ω–∞—á–∏–Ω–∞—Ç—å—Å—è —Å –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏–π. 
            –û—Ç–≤–µ—Ç –¥–æ–ª–∂–µ–Ω —Å–æ—Å—Ç–æ—è—Ç—å —Ç–æ–ª—å–∫–æ –∏–∑ —à–∞–±–ª–æ–Ω–∞. –û–±—è–∑–∞—Ç–µ–ª—å–Ω–æ –Ω–∞ —Ä—É—Å—Å–∫–æ–º —è–∑—ã–∫–µ. 
            –ù–∏ –≤ –∫–æ–µ–º —Å–ª—É—á–∞–µ –Ω–µ –∏—Å–ø–æ–ª—å–∑—É–π —à—Ç—É–∫–∏ –ø–æ —Ç–∏–ø—É ... üëâ https://[link] –∏ —Ç–¥. –í–æ—Ç —Ç–µ–∫—Å—Ç: \n\n\\text"""
        self.BASE_PHRASE = """–ü—Ä–æ—á—Ç–∏ —Å–ª–µ–¥—É—é—â–∏–π —Ç–µ–∫—Å—Ç –∏ —Å–æ—Å—Ç–∞–≤—å –∫—Ä–∞—Ç–∫–∏–π, —Å—Ç—Ä—É–∫—Ç—É—Ä–∏—Ä–æ–≤–∞–Ω–Ω—ã–π –ø–µ—Ä–µ—Å–∫–∞–∑. –ù–µ –Ω—É–∂–Ω–æ —Å–æ—Å—Ç–∞–≤–ª—è—Ç—å –æ–≥–ª–∞–≤–ª–µ–Ω–∏–µ –∏
            –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –≤—Å—è–∫–∏–µ –≤–µ—â–∏ –ø–æ —Ç–∏–ø—É '–û—Å–Ω–æ–≤–Ω—ã–µ –ò–¥–µ–∏' '–°—É—Ç—å –ø–æ—Å—Ç–∞' –∏ —Ç–¥.
            –ü—Ä–æ—Å—Ç–æ –ø–µ—Ä–µ—Ñ—Ä–∞–∑–∏—Ä—É–π —Ç–µ–∫—Å—Ç –Ω–∞ –Ω–∞—É—á–Ω–æ-–ø–æ–ø—É–ª—è—Ä–Ω—ã–π –±–µ–∑ –ª–∏—à–Ω–∏—Ö –≤–≤–æ–¥–Ω—ã—Ö —Ñ—Ä–∞–∑. –û–±—è–∑–∞—Ç–µ–ª—å–Ω–æ –Ω–∞ —Ä—É—Å—Å–∫–æ–º —è–∑—ã–∫–µ.
            –ï—Å–ª–∏ —Ç–µ–∫—Å—Ç –∏–º–µ–µ—Ç —É–∫–∞–∑–∞–Ω–∏—è –Ω–∞ –∫–∞–∫–æ–≥–æ —Ç–æ —á–µ–ª–æ–≤–µ–∫–∞, –¥–æ–ø—É—Å—Ç–∏–º '–º–µ–Ω—è –∑–æ–≤—É—Ç ...', —Ç–æ —É—á—Ç–∏ —ç—Ç–æ –≤ —Å–≤–æ–µ–π —Ñ–æ—Ä–º—É–ª–∏—Ä–æ–≤–∫–µ
            –û—Ç–≤–µ—Ç –Ω–µ –¥–æ–ª–∂–µ–Ω –ø—Ä–µ–≤—ã—à–∞—Ç—å \\len —Å–∏–º–≤–æ–ª–æ–≤. –í–æ—Ç —Ç–µ–∫—Å—Ç: \n\\text"""
        self.BASE_INTERVAL = 3600 * 3

        self.cfg = []


    async def get_info_from_file(self):
        if not self.filename:
            print("Error: filename=None")
            return
        if os.path.exists(self.filename):
            with open(self.filename, 'r', encoding='utf-8') as f:
                info = f.readlines()
            for channel in info:
                tmp_cfg = {}

                all = channel.split(';')

                url = all[0].strip()
                rss = all[1].strip().split(',')
                hashtags = all[2].strip().split(',')
                times = all[3].strip().split(',')
                template = all[4] if all[4] != '-1' else self.BASE_TEMPLATE
                rephrase = all[5] if all[5] != '-1' else self.BASE_PHRASE
                interval = int(all[6].strip()) if all[6] != '-1' else self.BASE_INTERVAL

                tmp_cfg['url'] = url
                tmp_cfg['rss_sources'] = rss
                tmp_cfg['hashtags'] = hashtags
                tmp_cfg['time'] = times
                tmp_cfg['template'] = template
                tmp_cfg['rephrase'] = rephrase
                tmp_cfg['interval'] = interval

                self.cfg.append(tmp_cfg)

    async def get_info_from_cmd(self):
        channels_count = int(input("–í–≤–µ–¥–∏—Ç–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –∫–∞–Ω–∞–ª–æ–≤, –∫–æ—Ç–æ—Ä–æ–µ –≤—ã —Ö–æ—Ç–∏—Ç–µ –¥–æ–±–∞–≤–∏—Ç—å: "))
        for i in range(channels_count):
            temp_data = {}
            link = input("–í–≤–µ–¥–∏—Ç–µ —Å—Å—ã–ª–∫—É –Ω–∞ —Ç–≥–∫ (–ø—Ä–∏–º–µ—Ä - @Durov): ")
            rss = input("–ß–µ—Ä–µ–∑ –ø—Ä–æ–±–µ–ª –≤—Å—Ç–∞–≤—å—Ç–µ —Å—Å—ã–ª–∫–∏ –Ω–∞ rss –∏—Å—Ç–æ—á–Ω–∏–∫–∏: ").split()
            hashtags = input("–ß–µ—Ä–µ–∑ –ø—Ä–æ–±–µ–ª –≤–≤–µ–¥–∏—Ç–µ —Ö—ç—à—Ç–µ–≥–∏: ").split()
            times = input("–ß–µ—Ä–µ–∑ –ø—Ä–æ–±–µ–ª –≤–≤–µ–¥–∏—Ç–µ –≤—Ä–µ–º–µ–Ω–∞ –ø–æ—Å—Ç–∏–Ω–≥–∞ (–ø—Ä–∏–º–µ—Ä - 08:30 9:40): ")
            template = input("–í–≤–µ–¥–∏—Ç–µ –∑–∞–ø—Ä–æ—Å –¥–ª—è –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ –∑–∞–≥–æ–ª–æ–≤–∫–∞ (–≤–≤–µ–¥–∏—Ç–µ -1 –¥–ª—è "
                             "–∑–∞–ø—Ä–æ—Å–∞ –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é): ")
            rephrase = input("–í–≤–µ–¥–∏—Ç–µ –∑–∞–ø—Ä–æ—Å –¥–ª—è –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ –∫—Ä–∞—Ç–∫–æ–≥–æ –æ–ø–∏—Å–∞–Ω–∏—è (–≤–≤–µ–¥–∏—Ç–µ -1 –¥–ª—è "
                             "–∑–∞–ø—Ä–æ—Å–∞ –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é): ")
            interval = input("–í–≤–µ–¥–∏—Ç–µ –∏–Ω—Ç–µ—Ä–≤–∞–ª –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –Ω–∞–ª–∏—á–∏—è –Ω–æ–≤—ã—Ö –ø–æ—Å—Ç–æ–≤ rss (–≤–≤–µ–¥–∏—Ç–µ -1 –¥–ª—è "
                             "–∑–Ω–∞—á–µ–Ω–∏—è –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é): ")
            if template == '-1':
                template = self.BASE_TEMPLATE
            if rephrase == '-1':
                rephrase = self.BASE_PHRASE
            if interval == '-1':
                interval = self.BASE_INTERVAL

            temp_data['url'] = link
            temp_data['rss_sources'] = rss
            temp_data['hashtags'] = hashtags
            temp_data['time'] = times
            temp_data['template'] = template
            temp_data['rephrase'] = rephrase
            temp_data['interval'] = interval

            self.cfg.append(temp_data)

    async def write_to_json(self):
        data = {'token': '8022820972:AAHUIM55DwEEmSTbm_qEiS1qbw77aS1Kzj8',
                'AI link': 'http://localhost:11434',
                'channels': []
                }

        data['channels'].extend(self.cfg)
        with open('CONFIG.json', 'w', encoding='utf-8') as f:
            json.dump(data, f, ensure_ascii=False, indent=4)

    async def add_to_json(self, data):
        try:
            with open('CONFIG.json', 'r', encoding='utf-8') as f:
                self.cfg = json.load(f)
        except Exception as e:
            print('Error: cannot open json file [read process]: ', e)

        self.cfg['channels'].append(data)
        try:
            with open('CONFIG.json', 'w', encoding='utf-8') as f:
                json.dump(self.cfg, f, ensure_ascii=False, indent=4)
        except Exception as e:
            print('Error: cannot write data to json [write process]: ', e)

if __name__ == '__main__':
    print(asyncio.run(SetChannels().get_info_from_file()))